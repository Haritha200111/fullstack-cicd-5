name: Local K8s CI/CD

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    env:
      BACKEND_IMAGE: fullstack-backend:latest
      FRONTEND_IMAGE: fullstack-frontend:latest
      DATABASE_URL: postgresql://postgres:postgres@postgres-service:5432/mydb?sslmode=disable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Backend build
      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Build backend Docker image
        run: docker build -t ${{ env.BACKEND_IMAGE }} ./backend

      # Frontend build
      - name: Build frontend Docker image
        run: docker build -t ${{ env.FRONTEND_IMAGE }} ./frontend

      # Load images into kind (since using local k8s)
      - name: Load images into kind
        run: |
          kind load docker-image ${{ env.BACKEND_IMAGE }} --name haritha-dev-cluster
          kind load docker-image ${{ env.FRONTEND_IMAGE }} --name haritha-dev-cluster

      # Deploy Postgres first
      - name: Apply Postgres manifests
        run: kubectl apply -f k8s/postgres-deployment.yml

      - name: Wait for Postgres
        run: kubectl wait --for=condition=ready pod -l app=postgres --timeout=120s

      # Run migrations as a K8s Job
      - name: Apply Prisma migration job
        run: kubectl apply -f k8s/migrate-job.yml --v=6

      - name: Wait for migration job
        run: kubectl wait --for=condition=complete job/prisma-migrate-job --timeout=300s

      # Cleanup migration job explicitly
      - name: Cleanup migration job
        if: always()
        run: kubectl delete job prisma-migrate-job --ignore-not-found=true

      # Deploy backend + frontend
      - name: Apply app manifests
        run: kubectl apply -f k8s/
